aes(x=CELLETAL, y=n) +
geom_col()
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10")
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10", limits=c(0,10))
yktr %>%
count(CELLETAL) ->
tally
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10", limits=c(0,10))
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10") +
xlim(0,10)
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10") +
xlim(0,100)
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10") +
xlim(0,1000)
tally %>% arrange(desc(n))
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10") +
xlim(0,30)
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10") +
xlim(50,300)
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10") +
xlim(50,120)
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10") +
xlim(0,12)
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10") +
xlim(0,25)
ytkr %>% arrange(CELLETAL)
yktr %>% arrange(CELLETAL)
yktr %>% pull(CELLETAL) %>% min()
yktr %>% pull(CELLETAL) %>% min(na.rm=TRUE)
tally %>% arrange(CELLETAL)
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10") +
xlim(-1,25)
yktr %>% filter(CELLETAL < 0.01)
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10") +
xlim(9998,)
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10") +
xlim(9990,10001)
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10") +
xlim(9000,10001)
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10") +
xlim(1000,10001)
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10") +
xlim(9000,10001)
ggplot(tally) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10") +
xlim(1000,10001)
ggplot(tally %>% filter(CELLETAL >= 1000)) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10")
ggplot(tally %>% filter(CELLETAL >= 9000)) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10")
ggplot(tally %>% filter(CELLETAL >= 0)) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_y_continuous(trans="log10")
ggplot(tally %>% filter(CELLETAL >= 0)) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_x_continuous(trans="log10")
ggplot(tally %>% filter(CELLETAL > 0)) +
aes(x=CELLETAL, y=n) +
geom_col() +
scale_x_continuous(trans="log10")
dat <- tibble(x=rnorm(1e5))
dat <- tibble(x=rnorm(1e5))
ggplot(dat) +
aes(x=x) +
geom_hist()
ggplot(dat) +
aes(x=x) +
geom_histogram()
ggplot(dat) +
aes(x=x) +
geom_histogram() +
stat_ecdf()
ggplot(dat) +
aes(x=x) +
#  geom_histogram() +
stat_ecdf()
dat <- tibble(x=rnorm(1e5), group=sample(letters, 1e5, TRUE))
ggplot(dat) +
aes(x=x. col=group) +
#  geom_histogram() +
stat_ecdf()
ggplot(dat) +
aes(x=x, col=group) +
#  geom_histogram() +
stat_ecdf()
ggplot(dat) +
aes(x=x, col=group) +
geom_histogram() +
stat_ecdf()
ggplot(dat) +
aes(x=x, col=group) +
#  geom_histogram() +
stat_ecdf()
df4_pos
# Maj Beldring Henningsen, majbh@sund.ku.dk
# wilmink for SCC curves
# nlme with nls starthelp
# to do:
## nls single curves for 20 animals (same herd, same parity, count > 8)
# tidy up:
## name each section: section 1 ####
## Mossas code: apply for: output, mean and median, plots
## for those possible: use nls output directly as start for nlme
#-------------------------------------------------------
# Packages and settings:
library(tidyverse)
library(ggpubr) # p values in boxplot
library(gridExtra) # gridarrange
ggplot2::theme_set(ggplot2::theme_bw())  # globally sets ggplot2 theme to theme_bw
library(GGally) # for ggpairs
library(nls.multstart)
library(nlme) # for nlslist
Sys.setlocale("LC_ALL","English") # date formatting
memory.size()            # Checking your memory size
memory.limit()           # Checking the set limit
memory.limit(size=56000) # suggest for 64 bit
options(stringsAsFactors = FALSE) # prevent factorizing caracters
#-------------------------------------------------------
# Loading data and preparing data:
# load("M:/PCR_data/curve6_SCC.RData") # from PCR crypted container
load("M:/PCR_data/curve6_nlme_wilmink.RData")
# save.image("M:/PCR_data/curve6_nlme_wilmink.RData")
yktr
allbes <- unique(yktr$BES_ID)
one_herd <- yktr %>%
filter(BES_ID = allbes[1], CELLETAL > 0.01, CELLETAL < 9998.9) %>%
mutate(logSCC = log(CELLETAL))
one_herd <- yktr %>%
filter(BES_ID == allbes[1], CELLETAL > 0.01, CELLETAL < 9998.9) %>%
mutate(logSCC = log(CELLETAL))
one_herd
f_wilmink <- function(DIM, a,b,k,d){
a + b * DIM + exp(-(exp(k)) * DIM)*d
}
# nls multistart (not grouped herd level):
# repeat for all 6 diff. datasets
nls_pos4 <- nls.multstart::nls_multstart(logSCC ~ f_wilmink(DIM, a, b, k, d),
data = one_herd,
lower=c(a=0, b=0, k=-5, d=0),
upper=c(a=9, b=1.5, k=0, d=5),
start_lower = c(a=0, b=0, k=-5, d=0),
start_upper = c(a=8, b=1, k=-0.01, d=4),
iter = 500,
supp_errors = "Y")
one_herd
# load("M:/PCR_data/curve6_SCC.RData") # from PCR crypted container
load("N:/PCR_data/curve6_nlme_wilmink.RData")
df_model
one_herd <- df_model %>%
mutate(CELLETAL = exp(logSCC)) %>%
filter(BES_ID == allbes[1], CELLETAL > 0.01, CELLETAL < 9998.9) %>%
mutate(logSCC = log(CELLETAL))
one_herd
allbes <- unique(df_model$BES_ID)
one_herd <- df_model %>%
mutate(CELLETAL = exp(logSCC)) %>%
filter(BES_ID == allbes[1], CELLETAL > 0.01, CELLETAL < 9998.9) %>%
mutate(logSCC = log(CELLETAL))
one_herd
f_wilmink <- function(DIM, a,b,k,d){
a + b * DIM + exp(-(exp(k)) * DIM)*d
}
# nls multistart (not grouped herd level):
# repeat for all 6 diff. datasets
nls_pos4 <- nls.multstart::nls_multstart(logSCC ~ f_wilmink(DIM, a, b, k, d),
data = one_herd,
lower=c(a=0, b=0, k=-5, d=0),
upper=c(a=9, b=1.5, k=0, d=5),
start_lower = c(a=0, b=0, k=-5, d=0),
start_upper = c(a=8, b=1, k=-0.01, d=4),
iter = 500,
supp_errors = "Y")
coef(nls_pos4)
# nls multistart (not grouped herd level):
# repeat for all 6 diff. datasets
nls_pos4 <- nls.multstart::nls_multstart(logSCC ~ f_wilmink(DIM, a, b, k, d),
data = one_herd,
#                                         lower=c(a=0, b=0, k=-5, d=0),
#                                         upper=c(a=9, b=1.5, k=0, d=5),
start_lower = c(a=0, b=0, k=-5, d=0),
start_upper = c(a=8, b=1, k=-0.01, d=4),
iter = 500,
supp_errors = "Y")
coef(nls_pos4)
# nls multistart (not grouped herd level):
# repeat for all 6 diff. datasets
nls_oh <- nls.multstart::nls_multstart(logSCC ~ f_wilmink(DIM, a, b, k, d),
data = one_herd,
#                                         lower=c(a=0, b=0, k=-5, d=0),
#                                         upper=c(a=9, b=1.5, k=0, d=5),
start_lower = c(a=0, b=0, k=-5, d=0),
start_upper = c(a=8, b=1, k=-0.01, d=4),
iter = 500,
supp_errors = "Y")
coef(nls_oh)
allbes
coef(nls_oh)
nlme_pos4 <- nlme(logSCC ~ a + b * DIM + exp(-(exp(k)) * DIM)*d,
data=one_herd,
fixed=a+b+k+d~1,
random=a+b+k+d~1,
groups=~DYR_ID,
start=c(a = 4.5, b = 0.004, k = -1.5, d = 3.2),
na.action=na.exclude,
control = list(maxIter = 1200, msMaxIter = 1200))
nlme_pos4 <- nlme(logSCC ~ a + b * DIM + exp(-(exp(k)) * DIM)*d,
data=one_herd,
fixed=a+b+k+d~1,
random=a+b+k+d~1,
groups=~DYR_ID,
start=coef(nls_oh),
na.action=na.exclude,
control = list(maxIter = 1200, msMaxIter = 1200))
df_model
one_herd <- df_model %>%
filter(BES_ID == allbes[1]) %>%
mutate(CELLETAL = exp(logSCC)) %>%
filter(CELLETAL > 0.01, CELLETAL < 9998.9) %>%
mutate(logSCC = log(CELLETAL)) %>%
mutate(AnimalParity = interaction(DYR_ID, PARITY))
nlme_pos4 <- nlme(logSCC ~ a + b * DIM + exp(-(exp(k)) * DIM)*d,
data=one_herd,
fixed=a+b+k+d~1,
random=a+b~1,
groups=~AnimalParity,
start=coef(nls_oh),
na.action=na.exclude,
control = list(maxIter = 1200, msMaxIter = 1200))
nlme_pos4
ranef(nlme_pos4)
nlme_pos4
class(nlme_pos4)
?predict.nlme
one_herd %>% count(AnimalParity)
fakedata <- expand_grid(AnimalParity = unique(one_herd$AnimalParity), DIM = 1:305)
fakedata$prediction <- predict(nlme_pos4, newdata = fakedata)
ggplot(fakedata) +
aes(x=DIM, y=predict, col=AnimalParity) +
geom_line()
ggplot(fakedata) +
aes(x=DIM, y=prediction, col=AnimalParity) +
geom_line()
ggplot(fakedata %>% filter(AnimalParity == one_herd$AnimalParity[1])) +
aes(x=DIM, y=prediction, col=AnimalParity) +
geom_line() +
theme(legend.pos = "none")
ggplot(fakedata %>% filter(AnimalParity == sample(unique(one_herd$AnimalParity), 5))) +
aes(x=DIM, y=prediction, col=AnimalParity) +
geom_line() +
theme(legend.pos = "none")
ggplot(fakedata %>% filter(AnimalParity == sample(unique(one_herd$AnimalParity), 20))) +
aes(x=DIM, y=prediction, col=AnimalParity) +
geom_line() +
theme(legend.pos = "none")
ggplot(fakedata %>% filter(AnimalParity == sample(unique(one_herd$AnimalParity), 15))) +
aes(x=DIM, y=prediction, col=AnimalParity) +
geom_line() +
theme(legend.pos = "none")
ggplot(fakedata %>% filter(AnimalParity %in% sample(unique(one_herd$AnimalParity), 15))) +
aes(x=DIM, y=prediction, col=AnimalParity) +
geom_line() +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 15)
ggplot() +
geom_line(fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
theme(legend.pos = "none")
?geom_line
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
theme(legend.pos = "none")
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 5)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
nlme_pos4 <- nlme(logSCC ~ a + b * DIM + exp(-(exp(k)) * DIM)*d,
data=one_herd,
fixed=a+b+k+d~PARITY,
random=a+b~1,
groups=~AnimalParity,
start=coef(nls_oh),
na.action=na.exclude,
control = list(maxIter = 1200, msMaxIter = 1200))
nlme_pos4 <- nlme(logSCC ~ a + b * DIM + exp(-(exp(k)) * DIM)*d,
data=one_herd,
fixed=a+b+k+d~PARITY,
random=a+b~1,
groups=~AnimalParity,
#                  start=coef(nls_oh),
na.action=na.exclude,
control = list(maxIter = 1200, msMaxIter = 1200))
?nlme
nlme_pos4 <- nlme(logSCC ~ a + b * DIM + exp(-(exp(k)) * DIM)*d,
data=one_herd,
fixed=a*PARITY+b*PARITY+k*PARITY+d*PARITY~,
random=a+b~1,
groups=~AnimalParity,
start=coef(nls_oh),
na.action=na.exclude,
control = list(maxIter = 1200, msMaxIter = 1200))
nlme_pos4 <- nlme(logSCC ~ a + b * DIM + exp(-(exp(k)) * DIM)*d,
data=one_herd,
fixed=a*PARITY+b*PARITY+k*PARITY+d*PARITY~,
random=a+b~1,
groups=~AnimalParity,
start=coef(nls_oh),
na.action=na.exclude,
control = list(maxIter = 1200, msMaxIter = 1200))
nlme_pos4 <- nlme(logSCC ~ a + b * DIM + exp(-(exp(k)) * DIM)*d,
data=one_herd,
fixed=a*PARITY+b*PARITY+k*PARITY+d*PARITY~1,
random=a+b~1,
groups=~AnimalParity,
start=coef(nls_oh),
na.action=na.exclude,
control = list(maxIter = 1200, msMaxIter = 1200))
nlme_pos4 <- nlme(logSCC ~ a + b * DIM + exp(-(exp(k)) * DIM)*d,
data=one_herd,
fixed=a+b+k+d~1,
random=a+b~1,
groups=~AnimalParity,
start=coef(nls_oh),
na.action=na.exclude,
control = list(maxIter = 1200, msMaxIter = 1200))
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals <- sample(unique(one_herd$AnimalParity), 2)
ggplot() +
geom_line(data=fakedata %>% filter(AnimalParity %in% animals), aes(x=DIM, y=prediction, col=AnimalParity)) +
geom_point(data=one_herd %>% filter(AnimalParity %in% animals), aes(x=DIM, y=logSCC, col=AnimalParity)) +
theme(legend.pos = "none")
animals
df_model
savehistory("C:/Users/zjt234/PhD/PCR_projects/PCR_R/Matt_DYR_curves.Rhistory")
